# name: Deploy to Azure App Service

# on:
#   push:
#     branches:
#       - main
#       - development

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v3

#       - name: Setup Node.js Version
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20.x"

#       - name: Install Dependencies
#         run: npm install

#       - name: Set Environment Variables
#         run: |
#           echo "NODE_ENV=${{ github.ref == 'refs/heads/main' && secrets.NODE_ENV || 'development' }}" >> $GITHUB_ENV
#           echo "DATABASE_URL=${{ github.ref == 'refs/heads/main' && secrets.DATABASE_URL || secrets.DATABASE_URL_DEV }}" >> $GITHUB_ENV

#       # - name: Run Sequelize Migrations
#       #   run: npx sequelize-cli db:migrate

#       - name: Deploy to Azure App Service
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ github.ref == 'refs/heads/main' && 'topvaluebrands-webapp' || 'topvaluebrands-webapp-dev' }}
#           publish-profile: ${{ github.ref == 'refs/heads/main' && secrets.AZURE_WEBAPP_PUBLISH_PROFILE || secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}
#           package: .

# name: Deploy to Azure App Service

# on:
#   push:
#     branches:
#       - main
#       - development

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v3

#       - name: Cache Node.js modules
#         uses: actions/cache@v3
#         with:
#           path: node_modules
#           key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
#           restore-keys: |
#             node-modules-${{ runner.os }}-

#       - name: Setup Node.js Version
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20.x"

#       - name: Install Dependencies
#         run: npm ci

#       - name: Deploy to Azure App Service
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ github.ref == 'refs/heads/main' && 'topvaluebrands-webapp' || 'topvaluebrands-webapp-dev' }}
#           publish-profile: ${{ github.ref == 'refs/heads/main' && secrets.AZURE_WEBAPP_PUBLISH_PROFILE || secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}
#           package: .
#         env:
#           NODE_ENV: ${{ github.ref == 'refs/heads/main' && secrets.NODE_ENV || 'development' }}
#           DATABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.DATABASE_URL || secrets.DATABASE_URL_DEV }}

##* V3
name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
      - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Setup Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm ci

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          else
            git diff --name-only origin/${{ github.base_ref }} origin/${{ github.head_ref }} > changed_files.txt
          fi
          echo "Changed files:"
          cat changed_files.txt

      - name: Create deployment package
        run: |
          mkdir deploy_package
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              mkdir -p deploy_package/$(dirname "$file")
              cp "$file" deploy_package/$(dirname "$file")/
            fi
          done < changed_files.txt
          cp package.json package-lock.json deploy_package/
          cd deploy_package
          zip -r ../deploy.zip .
        shell: bash

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        run: |
          az webapp deployment source config-zip --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ github.ref == 'refs/heads/main' && 'topvaluebrands-webapp' || 'topvaluebrands-webapp-dev' }} --src deploy.zip
        env:
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && secrets.NODE_ENV || 'development' }}
          DATABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.DATABASE_URL || secrets.DATABASE_URL_DEV }}

      - name: Azure logout
        run: |
          az logout
        if: always()
